{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-04-24T00:06:35.483138+00:00",
  "repo": "decentralized-identity/spartan_zkSNARK_signatures",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "I_kwDOG4otrc5FtAaj",
      "title": "Readme suggestion: Link to whitepaper (passive donation to DIF)",
      "url": "https://github.com/decentralized-identity/spartan_zkSNARK_signatures/issues/3",
      "state": "OPEN",
      "author": "bumblefudge",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "A year ago, before there was an AppCry WG to donate it to, MSR donated the whitepaper to the C&C WG, where it currently sits in a repo all by its lonesome:\r\nhttps://github.com/decentralized-identity/snark-credentials\r\n\r\nMaybe when this work item takes off and gets a readme, link to it there? And include it in the references of the IETF draft if that's where this all leads?\r\n\r\nSidenote: if you're recruiting, try shooting up a flare in the DIF newsletter! I think there are lots of small startups that are in the low-to-zero-DIF-participation category very enthusiastic about SNARKs who would be glad to follow along and have the occasional chore or editorial PR assigned to them!",
      "createdAt": "2022-03-15T09:49:36Z",
      "updatedAt": "2022-03-15T09:49:36Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 5,
      "id": "I_kwDOG4otrc5HUZeB",
      "title": "Proof of knowledge of ECDSA signature",
      "url": "https://github.com/decentralized-identity/spartan_zkSNARK_signatures/issues/5",
      "state": "OPEN",
      "author": "srinathsetty",
      "authorAssociation": "NONE",
      "assignees": [
        "quartzjer"
      ],
      "labels": [],
      "body": "\r\n## Background on SNARKs and Spartan\r\nSpartan is a zkSNARK, so it consists of three algorithms:\r\n\r\n* Setup() --> `pp`\r\n* Prove(`pp`, `ckt`, `witness`, `io`) --> `\\pi`\r\n* Verify(`pp`, `ckt`, `io`) --> {0, 1}\r\n\r\nHere, `pp` refers to some public parameters, `ckt` is the description of a circuit whose satisfiability is being proved, `witness` is a vector of secret inputs to the circuit, and `io` is a vector of public inputs to the circuit. In Spartan, the circuit is specified with R1CS.\r\n\r\nIn general, the circuit (or R1CS) is defined over a prime field with a certain modulus `p` (i.e., the set of numbers {0, 1, ..., `p`-1}). Spartan can work over a \"sufficiently large\" prime modulus. The Spartan implementation currently uses a particular `p`, which is the scalar field of `curve25519`.\r\n\r\n## Proving the knowledge of an ECDSA signature\r\nTo prove the knowledge of an ECDSA signature, we must write a circuit with the following characteristics: \r\n\r\nSecret inputs:\r\n\r\n* Message `M`\r\n* Signature `S`\r\n\r\nPublic inputs:\r\n\r\n* The public key of the signer `PK`\r\n\r\nThe circuit itself must implement ECDSA's verify method to check if `S` is a valid signature on `M` using `PK`.\r\n\r\n\r\nThere are three options to build the circuit:\r\n\r\n1. ECDSA signatures are defined over `P-256` curve and Spartan uses `curve25519`. In this case, the circuit will *non-natively* emulate arithmetic needed to verify `P-256` signatures in the scalar field of `curve25519`.\r\n\r\n2. ECDSA signatures are defined over `secp256k1` curve and Spartan uses `secq256k1`. In this case, the circuit will *natively* execute the necessary arithmetic over `secp256k1` since the base field of `secp256k1` equals the scalar field of `secq256k1`\r\n\r\n3. ECDSA signatures are defined over `P-256` curve and Spartan uses curve (call it `Q-256`). Like in case (2), the circuit will *natively* execute the necessary arithmetic.\r\n\r\nThe primary advantage of (2) and (3) is the size of an ECDSA signature verify circuit will be ~10K gates (an order of magnitude or more smaller than with case (1)). The downside is that Spartan implementation must be updated to support these additional curves.",
      "createdAt": "2022-04-07T20:20:44Z",
      "updatedAt": "2022-04-21T20:10:27Z",
      "closedAt": null,
      "comments": [
        {
          "author": "quartzjer",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For (1.) using non-native arithmetic that you believe will be over 100K gates, would you have a rough guess of the performance on a modern CPU? 10s of seconds? Similar for both the Prove and Verify?\r\n\r\n> The downside is that Spartan implementation must be updated to support these additional curves.\r\n\r\nHow much is involved in such an addition? Could you point to the relevant place(s) in the current codebase?\r\n\r\n",
          "createdAt": "2022-04-07T21:26:19Z",
          "updatedAt": "2022-04-07T21:26:19Z"
        },
        {
          "author": "csuwildcat",
          "authorAssociation": "MEMBER",
          "body": "I'd prefer option 2",
          "createdAt": "2022-04-07T21:46:47Z",
          "updatedAt": "2022-04-07T21:46:47Z"
        },
        {
          "author": "dwaite",
          "authorAssociation": "MEMBER",
          "body": "I've heard the goal stated by some that the idea of using this gadget would be for privacy while using NIST-approved curves. secp256k1 and ed25519 are not (yet) NIST approved curves. So I'd be for option 3, or option 1 if it met some ambiguous performance requirements.\r\n\r\nThe latest drafts of SP 800-186 and FIPS 186-5 add edwards25519, edwards448, and EdDSA - while not adding secp256k1. For that reason I'd _prioritize_ a proof of knowledge of EdDSA signature (e.g 25519 curve on 25519-based spartan) over option 2.\r\n\r\nI know that DIF already filed comments asking for the inclusion of secp256k1 in SP 800-186/FIPS 186-5, but do not know if there has been any dialogue there.\r\n\r\nAlso, is `Q-256` an existing thing? It made me think of the [ZKAttest](https://www.semanticscholar.org/paper/ZKAttest%3A-Ring-and-Group-Signatures-for-Existing-Faz-Hern%C3%A1ndez-Ladd/837ec64cb0fd2e7ca00894032759e0b013780216) work and their Tom curves.",
          "createdAt": "2022-04-08T06:04:20Z",
          "updatedAt": "2022-04-08T06:04:20Z"
        },
        {
          "author": "christianpaquin",
          "authorAssociation": "NONE",
          "body": "I'm not familiar with the Spartan Q-256 curve, but is there any reason why you couldn't instantiate the scheme with the NIST P-256 (secp256r1) curve instead? That would offer a very interesting parameters set for deployers operating in NIST land.",
          "createdAt": "2022-04-18T22:56:30Z",
          "updatedAt": "2022-04-18T22:56:30Z"
        },
        {
          "author": "srinathsetty",
          "authorAssociation": "NONE",
          "body": "> For (1.) using non-native arithmetic that you believe will be over 100K gates, would you have a rough guess of the performance on a modern CPU? 10s of seconds? Similar for both the Prove and Verify?\r\n\r\nYes, the prover performance could be ~10 seconds (one CPU core). Verify should be less expensive (~100ms)\r\n\r\n> \r\n> > The downside is that Spartan implementation must be updated to support these additional curves.\r\n> \r\n> How much is involved in such an addition? Could you point to the relevant place(s) in the current codebase?\r\n\r\nFor supporting other curves, we essentially would need to replace the underlying library that implements curve arithmetic (Spartan currently uses `curve25519-dalek`).",
          "createdAt": "2022-04-19T23:52:44Z",
          "updatedAt": "2022-04-19T23:52:44Z"
        },
        {
          "author": "srinathsetty",
          "authorAssociation": "NONE",
          "body": "> I've heard the goal stated by some that the idea of using this gadget would be for privacy while using NIST-approved curves. secp256k1 and ed25519 are not (yet) NIST approved curves. So I'd be for option 3, or option 1 if it met some ambiguous performance requirements.\r\n> \r\n> The latest drafts of SP 800-186 and FIPS 186-5 add edwards25519, edwards448, and EdDSA - while not adding secp256k1. For that reason I'd _prioritize_ a proof of knowledge of EdDSA signature (e.g 25519 curve on 25519-based spartan) over option 2.\r\n> \r\n> I know that DIF already filed comments asking for the inclusion of secp256k1 in SP 800-186/FIPS 186-5, but do not know if there has been any dialogue there.\r\n> \r\n> Also, is `Q-256` an existing thing? It made me think of the [ZKAttest](https://www.semanticscholar.org/paper/ZKAttest%3A-Ring-and-Group-Signatures-for-Existing-Faz-Hern%C3%A1ndez-Ladd/837ec64cb0fd2e7ca00894032759e0b013780216) work and their Tom curves.\r\n\r\nYes, Q-256 can essentially be the same curve used in zkAttest.",
          "createdAt": "2022-04-19T23:53:38Z",
          "updatedAt": "2022-04-19T23:53:38Z"
        },
        {
          "author": "quartzjer",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> For that reason I'd prioritize a proof of knowledge of EdDSA signature (e.g 25519 curve on 25519-based spartan)\r\n\r\nI agree, let's discuss today and set the first milestone being constructing a PoK of an EdDSA signature.",
          "createdAt": "2022-04-21T20:10:26Z",
          "updatedAt": "2022-04-21T20:10:26Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOG4otrc4zfV0e",
      "title": "rename template",
      "url": "https://github.com/decentralized-identity/spartan_zkSNARK_signatures/pull/1",
      "state": "MERGED",
      "author": "dwaite",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-25T22:33:29Z",
      "updatedAt": "2022-02-26T06:46:02Z",
      "baseRepository": "decentralized-identity/spartan_zkSNARK_signatures",
      "baseRefName": "main",
      "baseRefOid": "e4a252970401321b952fe9fbb51af4ebeebea54a",
      "headRepository": "dwaite/spartan_zkSNARK_signatures",
      "headRefName": "main",
      "headRefOid": "cec348777b1f739b145fbe6fd854067fe47cff38",
      "closedAt": "2022-02-26T06:45:51Z",
      "mergedAt": "2022-02-26T06:45:51Z",
      "mergedBy": "paulgrehan",
      "mergeCommit": {
        "oid": "19e0f8ea8daeb22e37bbcd00e7910844379de592"
      },
      "comments": [
        {
          "author": "paulgrehan",
          "authorAssociation": "CONTRIBUTOR",
          "body": "aligned to group now",
          "createdAt": "2022-02-26T06:46:02Z",
          "updatedAt": "2022-02-26T06:46:02Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOG4otrc4ziCCE",
      "title": "Create LICENSE",
      "url": "https://github.com/decentralized-identity/spartan_zkSNARK_signatures/pull/2",
      "state": "MERGED",
      "author": "paulgrehan",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Just aligning repo to DIF standard",
      "createdAt": "2022-02-26T11:17:06Z",
      "updatedAt": "2022-02-26T11:18:08Z",
      "baseRepository": "decentralized-identity/spartan_zkSNARK_signatures",
      "baseRefName": "main",
      "baseRefOid": "4f5b50c0b866a38da6499310de5b5f1254d13467",
      "headRepository": "decentralized-identity/spartan_zkSNARK_signatures",
      "headRefName": "add-license-1",
      "headRefOid": "a25dfef43098c3319a791c010eb3c6c13610cf2b",
      "closedAt": "2022-02-26T11:18:00Z",
      "mergedAt": "2022-02-26T11:18:00Z",
      "mergedBy": "paulgrehan",
      "mergeCommit": {
        "oid": "4b20e603ced343549f95a07a8f7bfcda72c5a8b4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOG4otrc40-gVM",
      "title": "Initial Import",
      "url": "https://github.com/decentralized-identity/spartan_zkSNARK_signatures/pull/4",
      "state": "MERGED",
      "author": "quartzjer",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This fills in much of the draft template and imports some pre-existing introductory text provided by Srinath.",
      "createdAt": "2022-03-24T20:07:21Z",
      "updatedAt": "2022-04-07T18:36:36Z",
      "baseRepository": "decentralized-identity/spartan_zkSNARK_signatures",
      "baseRefName": "main",
      "baseRefOid": "4b20e603ced343549f95a07a8f7bfcda72c5a8b4",
      "headRepository": "decentralized-identity/spartan_zkSNARK_signatures",
      "headRefName": "initial_import",
      "headRefOid": "2543754e87bccae24bade8efe717bd2a6e10c6a5",
      "closedAt": "2022-03-26T04:17:06Z",
      "mergedAt": "2022-03-26T04:17:06Z",
      "mergedBy": "srinathsetty",
      "mergeCommit": {
        "oid": "cad9c5ea7828806e2a9a7a8fc5431385490f7ba1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG4otrc42482P",
          "commit": {
            "abbreviatedOid": "2543754"
          },
          "author": "srinathsetty",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-24T21:13:55Z",
          "updatedAt": "2022-03-24T21:13:56Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Do we want the title to be a bit broad? For example SNARK-based verifiable credentials?",
              "createdAt": "2022-03-24T21:13:56Z",
              "updatedAt": "2022-03-24T21:13:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG4otrc4249Hn",
          "commit": {
            "abbreviatedOid": "2543754"
          },
          "author": "srinathsetty",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-24T21:15:13Z",
          "updatedAt": "2022-03-24T21:15:13Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "A typo? \"sender (\"",
              "createdAt": "2022-03-24T21:15:13Z",
              "updatedAt": "2022-03-24T21:15:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG4otrc4249R2",
          "commit": {
            "abbreviatedOid": "2543754"
          },
          "author": "srinathsetty",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-24T21:15:57Z",
          "updatedAt": "2022-03-24T21:15:57Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Is there a typo here?",
              "createdAt": "2022-03-24T21:15:57Z",
              "updatedAt": "2022-03-24T21:15:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG4otrc429CyJ",
          "commit": {
            "abbreviatedOid": "2543754"
          },
          "author": "quartzjer",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-25T17:50:35Z",
          "updatedAt": "2022-03-25T17:50:35Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This is just a starting point, we'll definitely be updating the title in the future including renaming the draft itself.",
              "createdAt": "2022-03-25T17:50:35Z",
              "updatedAt": "2022-03-25T17:50:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG4otrc429DJN",
          "commit": {
            "abbreviatedOid": "2543754"
          },
          "author": "quartzjer",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-25T17:52:03Z",
          "updatedAt": "2022-03-25T17:52:03Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "This is your original text ;) IMO let's just merge it as-is and then make an editorial pass?",
              "createdAt": "2022-03-25T17:52:03Z",
              "updatedAt": "2022-03-25T17:52:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG4otrc429DLF",
          "commit": {
            "abbreviatedOid": "2543754"
          },
          "author": "quartzjer",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-25T17:52:11Z",
          "updatedAt": "2022-03-25T17:52:11Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "(same as above)",
              "createdAt": "2022-03-25T17:52:11Z",
              "updatedAt": "2022-03-25T17:52:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG4otrc42-KbD",
          "commit": {
            "abbreviatedOid": "2543754"
          },
          "author": "srinathsetty",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-26T04:14:48Z",
          "updatedAt": "2022-03-26T04:14:48Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "The original text had symbols. Perhaps they were lost when turned into markdown?",
              "createdAt": "2022-03-26T04:14:48Z",
              "updatedAt": "2022-03-26T04:14:48Z"
            }
          ]
        }
      ]
    }
  ]
}